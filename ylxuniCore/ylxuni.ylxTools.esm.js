function t(t,e){const n=Object.prototype.toString.call(t).replace(/\[object (\w+)\]/,"$1").toLowerCase();return e?n===e:n}function e(t){if("object"!=typeof t||null===t)throw new TypeError("Target must be an object");return new Proxy(t,{get:(t,e,n)=>Reflect.get(t,e,n),set:(t,e,n,o)=>Reflect.set(t,e,n,o)})}function n(t){const n=e(t);return{proxyObject:n,createInterceptor:function({onError:e,onSuccess:o}){return function(...r){const c=Object.keys(t)[0];n[c]?o(...r):e()}}}}function o(t){const e=t.startsWith("/")?t:"/"+t,[n,o]=e.split("?");return{path:n,query:o?"?"+o:"",delimiter:o?"&":"?"}}function r(e,n,o){t(e,"object")&&t(e.setData,"function")&&e.setData({[n]:o})}function c(t,e={},n){return new Promise(((o,r)=>{t({options:e,success(t){o(t)},fail(t){r(t)},complete(t){"function"==typeof n&&n(t)}})}))}function u(t,e){let n;return function(...o){const r=this;clearTimeout(n),n=setTimeout((()=>{t.apply(r,o)}),e)}}function s(){return{dataTypeJudge:t,createProxyObject:e,useInterceptorProxy:n,parseUrl:o,setWxData:r,promisify:c,debounce:u}}export{s as default};
